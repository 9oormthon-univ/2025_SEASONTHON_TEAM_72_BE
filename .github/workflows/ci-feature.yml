name: CI (feature branches)

on:
  push:
    branches:
      - "feature/signup,login" # 혹시 실제로 이 브랜치명을 쓰고 있다면, 정확히 지정
  pull_request:
    branches:
      - main                   # main으로 PR 올릴 때도 CI 실행

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle Build (with tests)
        run: |
          ./gradlew clean build --info

      # 선택: Dockerfile 빌드 검증 (실제 배포 아님)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker build (validate Dockerfile)
        run: |
          docker build -t pizza-app-ci:temp .
          # Compose 파일 정합성 체크(환경 변수 확장은 안 함, 문법 검증용)
          docker compose config >/dev/null
